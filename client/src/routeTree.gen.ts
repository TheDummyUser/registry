/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthForgotpasswordIndexImport } from './routes/auth/forgotpassword/index'
import { Route as AppLeavesIndexImport } from './routes/app/Leaves/index'
import { Route as AppHomeIndexImport } from './routes/app/Home/index'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotpasswordIndexRoute = AuthForgotpasswordIndexImport.update({
  id: '/forgotpassword/',
  path: '/forgotpassword/',
  getParentRoute: () => AuthRoute,
} as any)

const AppLeavesIndexRoute = AppLeavesIndexImport.update({
  id: '/Leaves/',
  path: '/Leaves/',
  getParentRoute: () => AppRoute,
} as any)

const AppHomeIndexRoute = AppHomeIndexImport.update({
  id: '/Home/',
  path: '/Home/',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/app/Home/': {
      id: '/app/Home/'
      path: '/Home'
      fullPath: '/app/Home'
      preLoaderRoute: typeof AppHomeIndexImport
      parentRoute: typeof AppImport
    }
    '/app/Leaves/': {
      id: '/app/Leaves/'
      path: '/Leaves'
      fullPath: '/app/Leaves'
      preLoaderRoute: typeof AppLeavesIndexImport
      parentRoute: typeof AppImport
    }
    '/auth/forgotpassword/': {
      id: '/auth/forgotpassword/'
      path: '/forgotpassword'
      fullPath: '/auth/forgotpassword'
      preLoaderRoute: typeof AuthForgotpasswordIndexImport
      parentRoute: typeof AuthImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppHomeIndexRoute: typeof AppHomeIndexRoute
  AppLeavesIndexRoute: typeof AppLeavesIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppHomeIndexRoute: AppHomeIndexRoute,
  AppLeavesIndexRoute: AppLeavesIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotpasswordIndexRoute: typeof AuthForgotpasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotpasswordIndexRoute: AuthForgotpasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/Home': typeof AppHomeIndexRoute
  '/app/Leaves': typeof AppLeavesIndexRoute
  '/auth/forgotpassword': typeof AuthForgotpasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/Home': typeof AppHomeIndexRoute
  '/app/Leaves': typeof AppLeavesIndexRoute
  '/auth/forgotpassword': typeof AuthForgotpasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/Home/': typeof AppHomeIndexRoute
  '/app/Leaves/': typeof AppLeavesIndexRoute
  '/auth/forgotpassword/': typeof AuthForgotpasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/app/Home'
    | '/app/Leaves'
    | '/auth/forgotpassword'
    | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth'
    | '/app/Home'
    | '/app/Leaves'
    | '/auth/forgotpassword'
    | '/auth/login'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/app/Home/'
    | '/app/Leaves/'
    | '/auth/forgotpassword/'
    | '/auth/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/Home/",
        "/app/Leaves/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/forgotpassword/",
        "/auth/login/"
      ]
    },
    "/app/Home/": {
      "filePath": "app/Home/index.tsx",
      "parent": "/app"
    },
    "/app/Leaves/": {
      "filePath": "app/Leaves/index.tsx",
      "parent": "/app"
    },
    "/auth/forgotpassword/": {
      "filePath": "auth/forgotpassword/index.tsx",
      "parent": "/auth"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
